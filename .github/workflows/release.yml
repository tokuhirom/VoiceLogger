name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-release:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode.app
    
    - name: Extract version from tag
      id: get_version
      run: |
        # Extract version from tag (e.g., v1.2.3 -> 1.2.3)
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
    
    - name: Build Release
      run: |
        xcodebuild -project VoiceLogger.xcodeproj \
          -scheme VoiceLogger \
          -configuration Release \
          -destination 'platform=macOS' \
          -derivedDataPath build \
          clean build \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          MARKETING_VERSION=${{ steps.get_version.outputs.VERSION }}
    
    - name: Create DMG
      run: |
        # Create a temporary directory for DMG contents
        mkdir -p dmg-contents
        cp -R build/Build/Products/Release/VoiceLogger.app dmg-contents/VoiceLogger.app
        
        # Create Applications symlink
        ln -s /Applications dmg-contents/Applications
        
        # Create DMG
        hdiutil create -volname "VoiceLogger" \
          -srcfolder dmg-contents \
          -ov -format UDZO \
          VoiceLogger.dmg
    
    - name: Upload Release Asset
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # Check if release exists, if not create it
        if gh release view "${{ github.ref_name }}" > /dev/null 2>&1; then
          echo "Release already exists, uploading asset..."
          gh release upload "${{ github.ref_name }}" VoiceLogger.dmg --clobber
        else
          echo "Creating new release..."
          gh release create "${{ github.ref_name }}" \
            --title "VoiceLogger ${{ steps.get_version.outputs.VERSION }}" \
            --notes "VoiceLogger release ${{ steps.get_version.outputs.VERSION }}
          
          ## Changes
          - See commit history for changes
          
          ## Installation
          1. Download VoiceLogger.dmg
          2. Open the DMG file
          3. Drag VoiceLogger to Applications folder
          4. Launch VoiceLogger from Applications
          
          ## Permissions Required
          - Microphone access
          - Speech recognition
          - Accessibility (for global shortcuts)" \
            VoiceLogger.dmg
        fi
