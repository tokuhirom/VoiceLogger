name: Release

on:
  release:
    types: [created]

jobs:
  build-release:
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.release.tag_name }}
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode.app
    
    - name: Extract version from release
      id: get_version
      run: |
        # Extract version from release tag (e.g., v1.2.3 -> 1.2.3)
        VERSION=${{ github.event.release.tag_name }}
        VERSION=${VERSION#v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
    
    - name: Build Release
      run: |
        xcodebuild -project VoiceLogger.xcodeproj \
          -scheme VoiceLogger \
          -configuration Release \
          -destination 'platform=macOS' \
          -derivedDataPath build \
          clean build \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          MARKETING_VERSION=${{ steps.get_version.outputs.VERSION }}
    
    - name: Create DMG
      run: |
        # Create a temporary directory for DMG contents
        mkdir -p dmg-contents
        cp -R build/Build/Products/Release/VoiceLogger.app dmg-contents/VoiceLogger.app
        
        # Create Applications symlink
        ln -s /Applications dmg-contents/Applications
        
        # Create DMG
        hdiutil create -volname "VoiceLogger" \
          -srcfolder dmg-contents \
          -ov -format UDZO \
          VoiceLogger.dmg
    
    - name: Upload Release Asset
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # Upload DMG to the existing release
        gh release upload "${{ github.event.release.tag_name }}" \
          VoiceLogger.dmg \
          --clobber
